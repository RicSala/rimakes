---
description: Read this rule whenever you need to add or update translations.
alwaysApply: false
---

# Internationalization (i18n) Structure

This codebase uses **next-intl** for internationalization.

## Supported Languages

- `en` - English
- `es` - Spanish (default)

## File Organization

Translations are co-located with components in a `dictionaries/` folder:

```
MyComponent/
  ├── MyComponent.tsx
  └── dictionaries/
      ├── en.json
      └── es.json
```

## Translation Files

Each JSON file has a **single root key** matching the component name (camelCase):

```json
// dictionaries/en.json
{
  "myComponent": {
    "title": "My Title",
    "description": "My Description"
  }
}

// dictionaries/es.json
{
  "myComponent": {
    "title": "Mi Título",
    "description": "Mi Descripción"
  }
}
```

## Using Translations in Components

**Client Components** (use `useTranslations` hook):

```tsx
import { useTranslations } from 'next-intl';

export const MyComponent = () => {
  const t = useTranslations('myComponent');
  return <h1>{t('title')}</h1>;
};
```

**Server Components** (use `getTranslations`):

```tsx
import { getTranslations } from 'next-intl/server';

export const MyComponent = async () => {
  const t = await getTranslations('myComponent');
  return <h1>{t('title')}</h1>;
};
```

## Adding New Translations (Checklist)

When adding translations for a new component:

1. **Create dictionary files** for both `en.json` and `es.json`
2. **Import in `global.d.ts`** - Add the Spanish import
3. **Add to type union** in `global.d.ts` - Include in `Messages` type
4. **Import in `request.ts`** - Add to the `Promise.all()` array
5. **Spread in messages** - Add to the returned `messages` object

## Configuration Files

- `/src/shared/internationalization/i18n/config.ts` - Routing and locale settings
- `/src/shared/internationalization/i18n/request.ts` - Loads translation files
- `/src/shared/internationalization/global.d.ts` - TypeScript definitions

## Key Rules

- **Same structure** - All language files must have identical JSON structure
- **All languages** - Add translations to both `en.json` and `es.json`
- **camelCase keys** - Use descriptive, concise names
- **Default locale** - Spanish (`es`) is default; no prefix in URLs
- **Type safety** - Update config files to get autocomplete and type checking
